# -*- coding: utf-8 -*-
"""day5 polynomialregression

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mtOxahzEkOe7N8hgCjCJ_8vUw_utgPjz

#polinomial features
##polynomial features are new features creted by taking the og features and raising them to powers(likex^2,x^3,etc),includibg combinations if there are multiple features.
"""

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.impute import SimpleImputer
from sklearn.compose import ColumnTransformer
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import PolynomialFeatures # Import PolynomialFeatures

#sample data: YearsExperiance vs Salary
data=pd.DataFrame({
    "YearsExperiance": [1,2,3,4,5,6,7,8,9,10],
    "Salary": [30000, 35000, 40000, 50000, 60000, 80000, 110000, 150000, 200000, 300000]
})
x=data[["YearsExperiance"]]
y=data["Salary"]

#train linear model
lin_reg=LinearRegression()
lin_reg.fit(x,y)

#predict
y_pred_linear=lin_reg.predict(x)

#convert to polynomial features (degreeb 2 orb 3 usually works well)
poly=PolynomialFeatures(degree=5)
x_poly=poly.fit_transform(x)
print(x_poly)

#train polynomial model
poly_reg=LinearRegression()
poly_reg.fit(x_poly,y)

#predict
y_pred_poly=poly_reg.predict(x_poly)

#plot the data and the prediction line
plt.scatter(x,y,color="green",label="Actual Data") #actual data
plt.plot(x,y_pred_linear,color="blue",label="LinearRegression")
plt.plot(x,y_pred_poly,color="red",label="PolnomialRegression(Degree 2)")
plt.xlabel("Years of Experiance")
plt.ylabel("Salary")
plt.title("Salary Prediction: Linear vs Polynomial")
plt.legend()
# plt.grid(True)
plt.show()

print("Linear R2:", r2_score(y, y_pred_linear))
print("Polynomial R2:", r2_score(y, y_pred_poly))

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
dataset=pd.read_csv('/content/Position_Salaries(poly_dataset).csv')
print(dataset)
x=dataset.iloc[:,1:-1].values
y=dataset.iloc[:,-1].values
from sklearn.linear_model import LinearRegression
lin_reg=LinearRegression()
lin_reg.fit(x,y)

from sklearn.preprocessing import PolynomialFeatures
poly_reg=PolynomialFeatures(degree=4)
x_poly=poly_reg.fit_transform(x)
lin_reg2=LinearRegression()
lin_reg2.fit(x_poly,y)

plt.scatter(x,y,color="red")
plt.plot(x,lin_reg.predict(x),color="blue")
plt.plot(x,lin_reg2.predict(poly_reg.fit_transform(x)),color="green")
plt.title("Truth or Bluff(Linear vs Polynomial)")
plt.xlabel("Position Level")
plt.ylabel("Salary")
plt.show()

import matplotlib.pyplot as plt

plt.scatter(x,y,color="red")
plt.plot(x,lin_reg2.predict(poly_reg.fit_transform(x)),color="blue")
plt.title("Truth or Bluff(Polynomial)")
plt.xlabel("Position Level")
plt.ylabel("Salary")
plt.show()