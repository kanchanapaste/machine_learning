# -*- coding: utf-8 -*-
"""project1 (Random forest)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Jg_IvwVdHlllQMy5YaeJKePddRnkTi-r
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report,ConfusionMatrixDisplay
from sklearn.preprocessing import LabelEncoder,StandardScaler

df=pd.read_csv('/content/titanic.csv')
df.head()

df.info()

print(df.columns)

print(df.describe)

df.drop(['PassengerId','Name','Ticket','Cabin'],axis=1,inplace=True)
df

print(df.shape)
df.ndim

x=df.drop('Survived',axis=1)
print(x)
y=df['Survived']
print(y)

df.dropna(subset=['Survived'],inplace=True)
df['Age']

label_encoder=LabelEncoder()
df['Sex']=label_encoder.fit_transform(df['Sex'])
df['Embarked']=label_encoder.fit_transform(df['Embarked'])
print(df['Sex'].head())
print(df['Embarked'].head())

scaler=StandardScaler()
x_scaled = scaler.fit_transform(x)
print(x_scaled)

x_train,x_text,y_train,y_test=train_test_split(x_scaled,y,test_size=0.2,random_state=42)

model=RandomForestClassifier(n_estimators=100,random_state=42)
model.fit(x_train,y_train)



y_pred = model.predict(x_text)

accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy}")

cm = confusion_matrix(y_test, y_pred)
disp = ConfusionMatrixDisplay(confusion_matrix=cm)
disp.plot()
plt.show()

print(classification_report(y_test, y_pred))

accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.2f}")

"""confusion matrix"""

cm=confusion_matrix(y_test,y_pred)
print("\n Confusion Matrix:\n",cm)
disp=ConfusionMatrixDisplay(confusion_matrix=cm,display_labels=['Did Not Survive','Survived'])
disp.plot(cmap='Blues')
plt.title('Confusion Matrix')
plt.show()

print("\n Classification Report:\n")
print(classification_report(y_test,y_pred))

sns.countplot(data=df,x='Sex',hue='Survived')
plt.title('Gender vs Survival')
plt.show()

sns.histplot(data=df,x='Age',bins=30,hue='Survived',kde=True)
plt.title('Age Distribution vs Survival')
plt.show()

sns.countplot(data=df,x='Pclass',hue='Survived')
plt.title('Passanger class vs Survival')
plt.show()

plt.figure(figsize=(10,6))
sns.heatmap(df.corr(),annot=True,cmap='coolwarm')
plt.title('Feature Correlation Heatmap')
plt.show()