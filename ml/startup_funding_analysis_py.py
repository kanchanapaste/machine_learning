# -*- coding: utf-8 -*-
"""startup_funding_analysis.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DcM2u04CAEIfVrR1ak3JpEx6jCbQ1-W5

Startup Funding Analysis - India

Goal: Analyze India's startup funding ecosystem and extract actionable business insights.

Table of Contents
 * Data Loading and Initial Exploration
 * Data Cleaning and Preprocessing
 * Funding Trends Over Time
 * Top Sectors Cities and Startups
 * Active Investors
 * Investment Type Distributions
 * Conclusions

Data Description

The file startup_funding.csv - which includes approximately 3,044 startup funding records in India - is most likely sourced from the "Indian Startup Funding" dataset originallly published on Kaggle. The data was compiled from public sources such as Crunchbase,Trscxn, covering funding rounds from January 2015 through August 2017

1.Data Loading and Initial Exploration
"""

import pandas as pd
import numpy as np

df=pd.read_csv('startup_funding.csv')
df.head()

"""checking the attributes of data"""

#column names
df.columns

#No of rows and columns
df.shape

#Columns with data types and value contents
df.info()

"""Note:

'Date dd/mm/yyyy' column is an object data type; should be of 'datatime' type
'Amount in USD' has object data type; should be numerical column (int or float)

2.Data Cleaning and Preprocessing

Drop unnecessary columns

86% of the values in Remarks are null.
Sr no is not helpful in analysing Startup data
Both the columns donot provide necessarry information for the analysis
"""

# Assuming 'df' is your pandas DataFrame
df.drop(['Sr No', 'Remarks'], axis=1, inplace=True)

#df.head()
#df.info()
df.shape

"""Check for duplicates, drop if any"""

df[df['Startup Name'].duplicated()]
df.drop_duplicates(subset=['Startup Name'],inplace=True)

# # Directly dropping all the null values
# df.dropna(inplace=True)
# df.shape

"""Handling null values"""

#Directly dropping all the values
#df.dropna(inplace=True)
#df.shape

#checking for null values
null_df = df.isnull().sum().reset_index()
null_df.columns=['columns','Null value count']
null_df['% Of Null values']=((null_df['Null value count']/len(df))*100).round(1)
null_df

"""Industry vertical"""

df[df['Industry Vertical'].isnull()]

#Fill null values with Mode or Unknown
df['Industry Vertical']=df['Industry Vertical'].fillna('Unknown')
#df['Industry Vertical'].mode()[0]

variations=df[df['Industry Vertical'].str.contains('commerce',case=False,na=False)]['Industry Vertical'].unique()
variations

"""**Column** **has** **Ecommerce** **values** **typed** **in** **different** **formats**,**need** **to** **combine** **them** **all**"""

df['Industry Vertical']=df['Industry Vertical'].replace(variations, value='E-commerce', regex=True)

df['Industry Vertical']=df['Industry Vertical'].replace(['Education','Ed-Tech'],value='Ed-Tech',regex=True)
df['Industry Vertical']=df['Industry Vertical'].replace(['Finance','Fin-Tech','FinTech'],value='FinTech',regex=True)

"""SubVertical"""

print(list(df['SubVertical'].unique())[:50])
df['SubVertical'].nunique()

variations=[]
variations.extend(df[df['SubVertical'].str.contains('online lending plaform',case=False,na=False)]['SubVertical'].unique())
variations.extend(df[df['SubVertical'].str.contains('online lending ',case=False,na=False)]['SubVertical'].unique())
variations=np.unique(variations)
print(variations)

df['SubVertical']=df['SubVertical'].replace(variations, value='Online Lending Platform', regex=True)

#Fill the nulls with Unknown
df['SubVertical']=df['SubVertical'].fillna('Unknown')

"""Investors Name"""

df['Investors Name'].nunique()

#fill null with  unknown
df['Investors Name']=df['Investors Name'].fillna('Unknown')

"""Note:

The null values of columns Industry Vertical,SubVertical and Investors Name are handled
Data type conversion of the columns is not allowed with presence of Nan values and hence may cause errors
"""

#checking for null values
null_df=df.isnull().sum().reset_index()
null_df.columns=['Column Name','Null Values']
null_df['% Null Values']=((null_df['Null Values']/len(df))*100).round(1)
null_df

"""City Location"""

df['City  Location'].value_counts()[:5]

df['City  Location']= df['City  Location'].replace(np.nan, df['City  Location'].mode()[0])

df['City  Location'].value_counts()

"""Investment Type"""

#renaming the column
df.rename(columns={'InvestmentnType':'Investment Type'},inplace=True)

df[df['Investment Type'].isna()].shape[0]

df['Investment Type'].value_counts()[:5]

df['Investment Type'] = df['Investment Type'].replace(np.nan, df['Investment Type'].mode()[0])

df.isnull().sum()

"""Amount in USD"""

print('Null values in Amount in USD', df[df['Amount in USD'].isna()].shape)

df.dropna(subset=['Amount in USD'],inplace=True)

df.isnull().sum()

print(df['Amount in USD'].unique().tolist(),end=' ')

df['Amount in USD']= df['Amount in USD'].str.lower().replace( ['unknown', 'undisclosed'],np.nan)
df['Amount in USD']= df['Amount in USD'].str.replace(',','',regex=False)

df.dropna(subset = 'Amount in USD', inplace=True)

df.isnull().sum()

"""Data type conversions

Date dd/mm/yy
"""

df.rename(mapper={'Date dd/mm/yyyy':'Date'},inplace=True,axis=1)
df.head(2)

df['Date']=pd.to_datetime(df['Date'],format= '%d/%m/%Y',errors='coerce')

df.isnull().sum()

df.dropna(subset=['Date'],inplace=True)

"""Amount in USD"""

df['Amount in USD']=pd.to_numeric(df['Amount in USD'],errors='coerce')

df.isnull().sum()

df.info()

"""EDA - Exploratory Data Analysis

Statistical Five points summary
"""

df.describe(include='number') #'all'

"""1. Min fund Amount:
2.   50% of fund amount:
1.  Max fund amount:
2.  Note: Max fund amount is much higher then 75% of the fund amounts showing a lrage right skewed distribution

"""

df.describe(include='object')

"""Statistical Summary:

* total count of values: 2059

*  cleaned dataset contains 1691 diffrent startups

*   consumer internet is the vertical and city wise, bangalore is highest      frequnency to recieve investment funds

*   Most of the investments are of type Private Equity

**Univariate** **Analysis**
"""

import matplotlib.pyplot as plt
import seaborn as sns

"""**Categorical** **columns**

Top sectors
"""

plt.figure(figsize=(10,4))
top_categories = df['Industry Vertical'].value_counts().head(10)
sns.barplot(x=top_categories.index, y=top_categories.values, palette='viridis')
plt.title(f'Top 10 Indusry Verticals')
plt.xlabel('Sector')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.show()

"""* Consumer Internet is the Vertical recieving highest Investment in this dataset

* Followed by Technology and Ecommerce etc.

* Dataset significan t count of values where the area of Investment is missing.

* Domains like HealthCare, Education and logistics are recievign relatively much less investments
"""

plt.figure(figsize=(10,4))
top_categories = df['SubVertical'].value_counts().head(10)
print(top_categories)
sns.barplot(x=top_categories.index[1:], y=top_categories.values[1:], edgecolor='black',palette='viridis')
plt.title(f'Top 10 SubVertical')
plt.xlabel('Sector')
plt.ylabel('Count')
plt.xticks(rotation=70)
plt.show()

"""Online lending platform Pharmacy followed by Education and Food delivery platform are the Subverticals that have the highest funding

Top cities
"""

# count plots for top 10 categories

plt.figure(figsize=(10,4))
top_categories = df['City  Location'].value_counts().head(10)
sns.barplot(x=top_categories.index, y=top_categories.values, palette='viridis')
plt.title(f'Top 10 City  Location')
plt.xlabel('City')
plt.ylabel('Count')
plt.xticks(rotation=60)
plt.show()

"""* metro cities like Bangalore,Mumbai and Delhi are the locations recieving highest funds with startup hub Bangalore has having the highest count
* Hyderabad,Chennai and Noida all 3 have similar funding counts

**Top** **Investors**
"""

#count plots for top 10 catergories
plt.figure(figsize=(10,4))
top_categories = df['Investors Name'].value_counts().head(10)
print(top_categories)
sns.barplot(x=top_categories.index[2:], y=top_categories.values[2:], palette='viridis')
plt.title(f'Top 10 Investors')
plt.xlabel('Investor')
plt.ylabel('Count')
plt.xticks(rotation=60)
plt.show()

"""* Most of the Investor details is not diclosed in the public domain
* Cut those published,Angel Investors/Network are the top Investors followed by sequoia Capital and Kalaari Capital

**Popular** **Investment** **Type**
"""

#count plots for top 10 categories
plt.figure(figsize=(10,4))
top_categories = df['Investment Type'].value_counts().head(10)
print(top_categories)
sns.barplot(x=top_categories.index, y=top_categories.values, palette='viridis')
plt.title(f'Top 10 Investment Type')
plt.xlabel('Investment Type')
plt.ylabel('Count')
plt.xticks(rotation=60)
plt.show()

"""Top Startups"""

plt.figure(figsize=(10,4))
top_categories = df['Startup Name'].value_counts().head(10)
print(top_categories)
sns.barplot(x=top_categories.index, y=top_categories.values)
plt.title(f'Top 10 Startup')
plt.xticks(rotation=45)
plt.ylabel('Count')
plt.show()

"""For Numerical: Amount in USD"""

import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(8, 4))
sns.histplot(df['Amount in USD'], kde=True, color='r', bins=100, line_kws={'linewidth': 3})
plt.title('Distribution of Investment Amounts')
plt.xlabel('Amount in USD')
plt.ylabel('Frequency')
plt.show()

"""Interpretation

X-axis (Amount in USD): Range of investment amounts (from very low to early $4 billion).
Y-axis (Frequency) : Number of investments in each amount range

* A sharp spike near $0 - indicating most investments are small
* Long tail to the right - a few extremely large investments (outliers).
* Highly skewed distribution (right-skewed)

**Bivariate** / **Multivariate** **Analysis**

Numerical-Numerical
"""

# Funding Trends over time
# Scatter Plot (Date vs. Amount)
plt.figure(figsize=(10,4))
sns.scatterplot(data=df, x='Date', y='Amount in USD')
plt.title('Investment Over Time')
plt.show()

"""Investment amount have consistently increased over the years from 2015 to 2020

**Categorial**-**Numerical**

# **Box** **Plot**
"""

df.info()

# Get top 5 Industry Verticals by count
top5 = df['Investors Name'].value_counts().nlargest(5).index

# Filter the DataFrame
filtered_df = df[df['Investors Name'].isin(top5)]

# Plot
plt.figure(figsize=(10,5))
sns.boxplot(data=filtered_df, x='Investors Name', y='Amount in USD')
plt.xticks(rotation=45)
plt.title('Investment Amount by Top 5 Most Frequent Investors')
plt.tight_layout()
plt.show()

"""**Violin** **Plot**"""

# City that receives hightest Investments Funds in violin plot
top5 = df['City  Location'].value_counts().nlargest(5).index
filtered_df = df[df['City  Location'].isin(top5)]

plt.figure(figsize=(10,5))
sns.violinplot(data=filtered_df, x='City  Location', y='Amount in USD')
plt.xticks(rotation=45)
plt.title('Investment Amount by City')
plt.show()

"""Group by"""

# Group by aggregation
df.groupby('Industry Vertical')['Amount in USD'].mean().sort_values(ascending=False).head(10)

"""Transportation

**Categorial**-**Categorial**

Crosstab+Stacked Bar

Ivestment Type across Cities
"""

# top_categories = ct.sum().nlargest(5).index
# ax=ct[top_categories].plot(kind='bar', stacked=True, figsize=(12,6))

ct = pd.crosstab(df['City  Location'], df['Investment Type'])
ct = ct[ct.sum(axis=1)>20] # filter for readability
ct

ct.plot(kind='bar', stacked=True, figsize=(12,6))
plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left',title="legend")
#plt.tight_layout() #Adjust layout to fit everything
plt.title('Investment Type by City')
plt.ylabel('Number of Deals')
plt.xticks(rotation=45)
plt.show()

"""Funding Trends Over Time"""

df['YearMonth'] = df['Date']#.dt.to_period('M)
monthly_funding = df.groupby('YearMonth')['Amount in USD'].sum().reset_index()
print(monthly_funding)
plt.figure(figsize=(22, 18))
sns.lineplot(data=monthly_funding, x='YearMonth', y='Amount in USD')
plt.title("Monthly Funding Amount Over Time")
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

"""**Top** **Sectors**"""

# Group by Startup Name and sum the funding amounts
top_funded = df.groupby('Industry Vertical')['Amount in USD'].sum().nlargest(10)

#Plot
plt.figure(figsize=(10,4))
sns.barplot(x=top_funded.index, y=top_funded.values)
plt.title('Top 10 sectors by Total Funding Received')
plt.xticks(rotation=45, ha='right')
plt.ylabel('Total Funding (USD)')
plt.tight_layout()
plt.show()

"""**Top** **Cities**"""

# Group by Startup Name and sum the funding amounts
top_funded = df.groupby('City  Location')['Amount in USD'].sum().nlargest(10)

#Plot
plt.figure(figsize=(10,4))
sns.barplot(x=top_funded.index, y=top_funded.values)
plt.title('Top 10 cities by Total Funding Received')
plt.xticks(rotation=45, ha='right')
plt.ylabel('Total Funding (USD)')
plt.tight_layout()
plt.show()

"""Top startups to recieve highest funds


"""

top_funded= df.groupby('Startup Name')['Amount in USD'].sum().nlargest(10)
plt.figure(figsize=(10, 4))
sns.barplot(x=top_funded.index, y=top_funded.values, palette='viridis')
plt.title('Top 10 Startups by Total Funding Received')
plt.xlabel('Startup Name')
plt.ylabel('Total Funding (USD)')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()

"""Active Investors



"""

top_funded=df['Investors Name'].value_counts()[:10]
plt.figure(figsize=(10, 4))
sns.barplot(x=top_funded.index, y=top_funded.values, palette='viridis')
plt.title('Top 10 Active Investors ')
plt.xlabel('Investors Name')
plt.ylabel('Total Funding (USD)')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()

"""Investment Type Distribution"""

plt.figure(figsize=(10, 4))
sns.countplot(data=df, y='Investment Type',order=df['Investment Type'].value_counts()[:8].index, palette='viridis')
plt.title('Investment Type Distribution')
plt.tight_layout()
plt.show()

"""Conclusions

Top sectors

* Consumer Internet is the Vertical receiving highest investment in this dataset

* Followed by Technology and Ecommerce etc

* Dataset significant count of values where the area of investment is missing

* Domains like Healthcare, Education and Logistics are receiving relatively much less investment

* Online Lending Platform Pharmacy followed by Education and Food delivery Platforms are the one have the highest funding Top Cities

* Metro cities like Bangalore, Mumbai and New Delhi are the locations receiving highest funds

* Bangalore having the highest count Top Investors

* Most of the investor details is not disclosed in the public domain

* Out of those published, Angel Investors / Network are the top investors followed by Sequoia Capital and Kalaari capital
"""

print(df.columns)
#sector vs Amount
plt.figure(figsize=(12,6))
top_industries=df.groupby('Industry Vertical')['Amount in USD'].sum().sort_values(ascending=False).head(10)
sns.barplot(x=top_industries.values,y=top_industries.index)
plt.title("Total 10 sectors by Total Funding")
plt.xlabel("Total Amount Funded")
plt.show()